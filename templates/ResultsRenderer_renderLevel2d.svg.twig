<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
        xmlns="http://www.w3.org/2000/svg"
        width="{{ imgW }}"
        height="{{ imgH }}"
>

        <!-- background rect -->
        <rect width="100%" height="100%"
              style="fill:{{ containerFillColor }};fill-opacity:1;stroke:{{ containerStrokeColor }};stroke-width:{{ containerStrokeWidth }};stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1.0"/>


        <!-- boxes -->
        {% for packedBox in packedBoxes %}
            {% set boxX = containerStrokeWidth/2 + packedBox.x * scale + strokeWidth/2 %}
            {% set boxY = containerStrokeWidth/2 + packedBox.y * scale + strokeWidth/2 %}
        <rect
                rx="{{ cornerRoundness }}"
                ry="{{ cornerRoundness }}"
                x="{{ boxX }}"
                y="{{ boxY }}"
                width="{{ packedBox.box.width * scale - strokeWidth }}"
                height="{{ packedBox.box.depth * scale - strokeWidth }}"
                style="fill:{{ fillColor }};fill-opacity:1;stroke:{{ strokeColor }};stroke-width:{{ strokeWidth }};stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1.0"/>
        {% endfor %}

        <!-- texts on top -->
        {% for packedBox in packedBoxes %}
                {% set boxX = containerStrokeWidth/2 + packedBox.x * scale + strokeWidth/2 %}
                {% set boxY = containerStrokeWidth/2 + packedBox.y * scale + strokeWidth/2 %}
        <text x="{{ (packedBox.x + packedBox.box.width/2) * scale + strokeWidth/2 }}"
              y="{{ (packedBox.y + packedBox.box.depth/2) * scale + strokeWidth/2 }}"
              alignment-baseline="middle"
              text-anchor="middle"
              fill="{{ textColor }}"
                {% if packedBox.box.width < packedBox.box.depth %}
                    transform="rotate(90,{{ boxX + packedBox.box.width/2 * scale }}, {{ boxY + packedBox.box.depth/2 * scale }})"
                {% endif %}
        >{{ packedBox.box.footprintAsString }}</text>
    {% endfor %}


</svg>
